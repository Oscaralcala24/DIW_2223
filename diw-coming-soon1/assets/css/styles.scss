/*
* DIW: Parte 1: 
* Usar una variable para establecer el valor inicial de h1 
* Crear los siguientes h restando 6px a cada uno.
* Utilizar un bucle para crear los h de forma automática
*/

@import "_variables";

@for $var from 1 to 7 {
    h#{$var}{
        font-size: #{$tamañoH};
    }
    $tamañoH : $tamañoH - 6;
}


/*
* DIW: Parte 2: 
* Usar anidamientos de la forma más optima posible
*/




.w3-table-all {
  border: 1px solid #ccc;

    tr{
        &:nth-child(odd) {
            background-color: #fff;
        }
        &:nth-child(even) {
            background-color: #f1f1f1;
        }
    }
}

.w3-bordered,.w3-table-all{
    tr{
        border-bottom: 1px solid #ddd;
    }
}


.w3-striped{
    tbody {
        tr{
            &:nth-child(even){
                background-color: #f1f1f1;
            }
        }
    }
}


.w3-hoverable{
    tbody{
        tr{
            &:hover{
                background-color: #ccc;
            }
        }
    }
}

.w3-ul.w3-hoverable{
    li{
        &:hover{
            background-color: #ccc;
        }
    }
}

.w3-centered{
    tr{
        th,td{
            text-align: center;
        }
    }
}

.w3-table,.w3-table-all{
    border-collapse: collapse;
    border-spacing: 0;
    width: 100%;
    display: table;
    th,td{
        padding: 8px 8px;
        display: table-cell;
        text-align: left;
        vertical-align: top;
        &:first-child{
        padding-left: 16px;
        }
    }
}



/*
* DIW: Parte 3: 
* Usar una variable para establecer el valor inicial de s1 
* Crear los siguientes h restando multiplicando por 2 cada uno.
* Utilizar un bucle para crear los s1 de forma automática
*/


 
@for $var from 1 to 13 {
    .w3-col.s#{$var}{
        width: #{$anchura*$var};
    }
}



/*
* DIW: Parte 4: 
* Usar bucles y variables para autocalcular valores dinámicos
* Usar anidamiento.
*  
*/
@media (min-width: 601px) {
    @for $var from 1 to 13 {
        @if $var == 3 {
            .w3-col.m#{$var},.w3-quarter{
                width: #{$anchura*$var};
            }
        }@else if $var == 4{
            .w3-col.m#{$var},.w3-third{
                width: #{$anchura*$var};
            }
        }@else if $var == 6{
            .w3-col.m#{$var},.w3-half{
                width: #{$anchura*$var};
            }
        }@else if $var == 8{
            .w3-col.m#{$var},.w3-twothird{
                width: #{$anchura*$var};
            }
        }@else if $var == 9{
            .w3-col.m#{$var},.w3-threequarter{
                width: #{$anchura*$var};
            }
        }@else{
            .w3-col.m#{$var}{
                width: #{$anchura*$var};
            }
        }
    }
}

@media (min-width: 993px) {
    @for $var from 1 to 13 {
        .w3-col.l#{$var}{
            width: #{$anchura*$var};
        }
    }
}

    
    



/*
* DIW: Parte 5: //////////////////////////////////////// //////////////////////////////////////// //////////////////////////////////////// //////////////////////////////////////// ////////////////////////////////////////
* Extrae las propiedades comunes en todos los media y usa @media con la estructura del preprocesador
*/



@media (max-width: 1205px) {
    .w3-auto {
      max-width: 95%;
    }
  }
  @media (max-width: 600px) {
    .w3-modal-content {
      margin: 0 10px;
      width: auto !important;
    }
    .w3-modal {
      padding-top: 30px;
    }
    .w3-dropdown-hover.w3-mobile .w3-dropdown-content,
    .w3-dropdown-click.w3-mobile .w3-dropdown-content {
      position: relative;
    }
    .w3-hide-small {
      display: none !important;
    }
    .w3-mobile {
      display: block;
      width: 100% !important;
    }
    .w3-bar-item.w3-mobile,
    .w3-dropdown-hover.w3-mobile,
    .w3-dropdown-click.w3-mobile {
      text-align: center;
    }
    .w3-dropdown-hover.w3-mobile,
    .w3-dropdown-hover.w3-mobile .w3-btn,
    .w3-dropdown-hover.w3-mobile .w3-button,
    .w3-dropdown-click.w3-mobile,
    .w3-dropdown-click.w3-mobile .w3-btn,
    .w3-dropdown-click.w3-mobile .w3-button {
      width: 100%;
    }
  }
  @media (max-width: 768px) {
    .w3-modal-content {
      width: 500px;
    }
    .w3-modal {
      padding-top: 50px;
    }
  }
  @media (min-width: 993px) {
    .w3-modal-content {
      width: 900px;
    }
    .w3-hide-large {
      display: none !important;
    }
    .w3-sidebar.w3-collapse {
      display: block !important;
    }
  }
  @media (max-width: 992px) and (min-width: 601px) {
    .w3-hide-medium {
      display: none !important;
    }
  }
  @media (max-width: 992px) {
    .w3-sidebar.w3-collapse {
      display: none;
    }
    .w3-main {
      margin-left: 0 !important;
      margin-right: 0 !important;
    }
    .w3-auto {
      max-width: 100%;
    }
  }





/*
* DIW: Parte 6: 
* Crea una clase que se llame .w3-display con position: absolute y con @extend crea una especialización de cada una de las siguientes
* Utiliza un mixin para no repetir left:0 y top:0 en todos los display donde sea requerido.
*/

@import "_mixins";




.w3-display{
    position: absolute;
    &-topleft{
        @include posicion(0,0);
    }
    &-topright{
        right: 0;
        top: 0;
    }
    &-bottomleft{
        left: 0;
        bottom: 0;
    }
    &-bottomright{
        right: 0;
        bottom: 0;
    }
    &-middle{
        @include posicion(50%,50%);
        transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
    }
    &-left{
        @include posicion(50%,0);
        transform: translate(0%, -50%);
        -ms-transform: translate(-0%, -50%);
    }
    &-right{
        top: 50%;
        right: 0%;
        transform: translate(0%, -50%);
        -ms-transform: translate(0%, -50%);
    }
    &-topmiddle{
        @include posicion(00,50%);
        transform: translate(-50%, 0%);
        -ms-transform: translate(-50%, 0%);
    }
    &-bottommiddle{
        left: 50%;
        bottom: 0;
        transform: translate(-50%, 0%);
        -ms-transform: translate(-50%, 0%);
    }
}
  


/*
* DIW: Parte 7: //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
* Utilizar anidamiento para el .w3-animate
*/

.w3-animate{
    &-fading{
        animation: fading 10s infinite;
    }
    &-opacity{
        animation: opac 0.8s;
    }
    &-top{
        position: relative;
        animation: animatetop 0.4s;
    }
    &-left{
        position: relative;
        animation: animateleft 0.4s;
    }
    &-right{
        position: relative;
        animation: animateright 0.4s;
    }
    &-bottom{
        position: relative;
        animation: animatebottom 0.4s;
    }
    &-zoom{
        animation: animatezoom 0.6s;
    }
    &-input{
        transition: width 0.4s ease-in-out;
        &:focus{
            width: 100% !important;
        }
    }
}



  @keyframes fading {
    0% {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  @keyframes opac {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }


  @keyframes animatetop {
    from {
      top: -300px;
      opacity: 0;
    }
    to {
      top: 0;
      opacity: 1;
    }
  }

  @keyframes animateleft {
    from {
      left: -300px;
      opacity: 0;
    }
    to {
      left: 0;
      opacity: 1;
    }
  }

  @keyframes animateright {
    from {
      right: -300px;
      opacity: 0;
    }
    to {
      right: 0;
      opacity: 1;
    }
  }

  @keyframes animatebottom {
    from {
      bottom: -300px;
      opacity: 0;
    }
    to {
      bottom: 0;
      opacity: 1;
    }
  }

  @keyframes animatezoom {
    from {
      transform: scale(0);
    }
    to {
      transform: scale(1);
    }
  }



  /*
* DIW: Parte 8: 
* Utilizar variables para ir incrementando de forma dinámica el font-size
*/

@each $nombre,$fuente in $tamañoFuentes {
    .w3#{$nombre}{
        font-size: $fuente !important;
    }
}


/*
* DIW: Parte 9: 
* Utilizar un mixin con los elementos repetidos entre todos los border 
* para que no se repita el código
*/

.w3-border{
    @include border(1px);
}
@each $var in top,bottom,left,right {
    .w3-border-#{$var}{
        @include border(1px);
    }
    .w3-#{$var}bar{
        @include border(6px);
    }
}



/*
* DIW: Parte 10: 
* Utiliza un bucle y variables para construir los padding dinámicamente.
*/

@each $var in 16,24,32,48,64 {
    .w3-padding-#{$var}{
        padding-top: #{$var}px !important;
        padding-bottom: #{$var}px !important;
    }
}



/*
* DIW: Parte 11: 
* Utiliza un bucle y variables para construir los padding dinámicamente.
*/

@each $var in 64,48,32,24 {
    .w3-padding-top-#{$var}{
        padding-top: #{$var}px !important;
    }
}





/* Colors */
/*
* DIW: Parte 12: 
* Utiliza mixins y variables para no repetir los colores !important
* Usa también anidamiento para los pseudoelementos
*/

